import unittest

from aoc2022.day_10 import (
    Elfpu,
    Elfram,
    Instruction,
    parse_instruction,
    part_one,
    part_two,
    read_instruction_file,
    step,
)


class DayTenTestCase(unittest.TestCase):
    def test_executes_example(self):
        instructions = [Instruction(1, 0), Instruction(2, 3), Instruction(2, -5)]

        ram = Elfram(instructions)
        cpu = Elfpu()

        print()

        while step(cpu, ram, lambda _: None):
            pass

        self.assertEqual(5, cpu.cycles)
        self.assertEqual(-1, cpu.x)

    def test_part_one_solves_example_input(self):
        instructions = [
            parse_instruction("addx 15"),
            parse_instruction("addx -11"),
            parse_instruction("addx 6"),
            parse_instruction("addx -3"),
            parse_instruction("addx 5"),
            parse_instruction("addx -1"),
            parse_instruction("addx -8"),
            parse_instruction("addx 13"),
            parse_instruction("addx 4"),
            parse_instruction("noop"),
            parse_instruction("addx -1"),
            parse_instruction("addx 5"),
            parse_instruction("addx -1"),
            parse_instruction("addx 5"),
            parse_instruction("addx -1"),
            parse_instruction("addx 5"),
            parse_instruction("addx -1"),
            parse_instruction("addx 5"),
            parse_instruction("addx -1"),
            parse_instruction("addx -35"),
            parse_instruction("addx 1"),
            parse_instruction("addx 24"),
            parse_instruction("addx -19"),
            parse_instruction("addx 1"),
            parse_instruction("addx 16"),
            parse_instruction("addx -11"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 21"),
            parse_instruction("addx -15"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx -3"),
            parse_instruction("addx 9"),
            parse_instruction("addx 1"),
            parse_instruction("addx -3"),
            parse_instruction("addx 8"),
            parse_instruction("addx 1"),
            parse_instruction("addx 5"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx -36"),
            parse_instruction("noop"),
            parse_instruction("addx 1"),
            parse_instruction("addx 7"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 2"),
            parse_instruction("addx 6"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 7"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("addx -13"),
            parse_instruction("addx 13"),
            parse_instruction("addx 7"),
            parse_instruction("noop"),
            parse_instruction("addx 1"),
            parse_instruction("addx -33"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 2"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 8"),
            parse_instruction("noop"),
            parse_instruction("addx -1"),
            parse_instruction("addx 2"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("addx 17"),
            parse_instruction("addx -9"),
            parse_instruction("addx 1"),
            parse_instruction("addx 1"),
            parse_instruction("addx -3"),
            parse_instruction("addx 11"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx -13"),
            parse_instruction("addx -19"),
            parse_instruction("addx 1"),
            parse_instruction("addx 3"),
            parse_instruction("addx 26"),
            parse_instruction("addx -30"),
            parse_instruction("addx 12"),
            parse_instruction("addx -1"),
            parse_instruction("addx 3"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx -9"),
            parse_instruction("addx 18"),
            parse_instruction("addx 1"),
            parse_instruction("addx 2"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 9"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx -1"),
            parse_instruction("addx 2"),
            parse_instruction("addx -37"),
            parse_instruction("addx 1"),
            parse_instruction("addx 3"),
            parse_instruction("noop"),
            parse_instruction("addx 15"),
            parse_instruction("addx -21"),
            parse_instruction("addx 22"),
            parse_instruction("addx -6"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("addx 2"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("addx -10"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 20"),
            parse_instruction("addx 1"),
            parse_instruction("addx 2"),
            parse_instruction("addx 2"),
            parse_instruction("addx -6"),
            parse_instruction("addx -11"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
        ]

        result = part_one(instructions)

        self.assertEqual(13140, result)

    def test_part_one_solves_real_input(self):
        instructions = read_instruction_file("inputs/day_10.txt")

        result = part_one(instructions)

        self.assertEqual(12640, result)

    def test_part_two_solves_example_input(self):
        instructions = [
            parse_instruction("addx 15"),
            parse_instruction("addx -11"),
            parse_instruction("addx 6"),
            parse_instruction("addx -3"),
            parse_instruction("addx 5"),
            parse_instruction("addx -1"),
            parse_instruction("addx -8"),
            parse_instruction("addx 13"),
            parse_instruction("addx 4"),
            parse_instruction("noop"),
            parse_instruction("addx -1"),
            parse_instruction("addx 5"),
            parse_instruction("addx -1"),
            parse_instruction("addx 5"),
            parse_instruction("addx -1"),
            parse_instruction("addx 5"),
            parse_instruction("addx -1"),
            parse_instruction("addx 5"),
            parse_instruction("addx -1"),
            parse_instruction("addx -35"),
            parse_instruction("addx 1"),
            parse_instruction("addx 24"),
            parse_instruction("addx -19"),
            parse_instruction("addx 1"),
            parse_instruction("addx 16"),
            parse_instruction("addx -11"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 21"),
            parse_instruction("addx -15"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx -3"),
            parse_instruction("addx 9"),
            parse_instruction("addx 1"),
            parse_instruction("addx -3"),
            parse_instruction("addx 8"),
            parse_instruction("addx 1"),
            parse_instruction("addx 5"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx -36"),
            parse_instruction("noop"),
            parse_instruction("addx 1"),
            parse_instruction("addx 7"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 2"),
            parse_instruction("addx 6"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 7"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("addx -13"),
            parse_instruction("addx 13"),
            parse_instruction("addx 7"),
            parse_instruction("noop"),
            parse_instruction("addx 1"),
            parse_instruction("addx -33"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 2"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 8"),
            parse_instruction("noop"),
            parse_instruction("addx -1"),
            parse_instruction("addx 2"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("addx 17"),
            parse_instruction("addx -9"),
            parse_instruction("addx 1"),
            parse_instruction("addx 1"),
            parse_instruction("addx -3"),
            parse_instruction("addx 11"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx -13"),
            parse_instruction("addx -19"),
            parse_instruction("addx 1"),
            parse_instruction("addx 3"),
            parse_instruction("addx 26"),
            parse_instruction("addx -30"),
            parse_instruction("addx 12"),
            parse_instruction("addx -1"),
            parse_instruction("addx 3"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx -9"),
            parse_instruction("addx 18"),
            parse_instruction("addx 1"),
            parse_instruction("addx 2"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 9"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx -1"),
            parse_instruction("addx 2"),
            parse_instruction("addx -37"),
            parse_instruction("addx 1"),
            parse_instruction("addx 3"),
            parse_instruction("noop"),
            parse_instruction("addx 15"),
            parse_instruction("addx -21"),
            parse_instruction("addx 22"),
            parse_instruction("addx -6"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("addx 2"),
            parse_instruction("addx 1"),
            parse_instruction("noop"),
            parse_instruction("addx -10"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("addx 20"),
            parse_instruction("addx 1"),
            parse_instruction("addx 2"),
            parse_instruction("addx 2"),
            parse_instruction("addx -6"),
            parse_instruction("addx -11"),
            parse_instruction("noop"),
            parse_instruction("noop"),
            parse_instruction("noop"),
        ]

        part_two(instructions)

        self.assertTrue(True)

    def test_part_one_solves_real_input(self):
        instructions = read_instruction_file("inputs/day_10.txt")

        part_two(instructions)

        self.assertTrue(True)
